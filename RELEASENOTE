Version 3.6.9 Release note of sdb.

============================================================================================================================================

This is a release note from version 3.3.3 if you're migrating  from a previous release prior to 2.0.0 please use the
migratedb script to migrate the previous database/table that is missing a user_host column. As always as a good practice
before doing some editing ALWAYS create a BACKUP of the file you're editing regardless of how/what/when/where.

============================================================================================================================================

Remove the leading white space from the previous column user_hosts.

__sdb_sqlite "UPDATE  history SET user_hosts=LTRIM(user_hosts);"

============================================================================================================================================

If you're using sdb prior to 3.2.2 the table directories does not exists yet, to create please source the create_table_directories file.

If the file is in the current pwd.

source ./create_table_directories

If the file is somewhere else.

source /path/to/somewhere/else/create_table_directories

As always as a good practice before doing some editing ALWAYS create a BACKUP of the file you're editing regardless of how/what/when/where.

============================================================================================================================================

If you're using sdb prior to 3.3.3 the column tty does not exists yet, to create please source the create_column_tty file.

If the file is in the current pwd.

source ./create_column_tty

If the file is somewhere else.

source /path/to/somewhere/else/create_column_tty

As always as a good practice before doing some editing ALWAYS create a BACKUP of the file you're editing regardless of how/what/when/where.

============================================================================================================================================

IMPROVEMENTS

-  Capture and insert commands such as ''exec bash'' and ''source ~/.bashrc''
-  Replace a newline with a literal ''\n'' for directory names that has newlines.
-  Add new table directories to store directories in advance.
-  Add new column tty in the history table.
-  Add a Human Readable time format when searching for time/date.
-  Use the native sqlite command when inserting an epoch date, instead of using date(1).
-  Accept start_date as the only argument when searching by date/time.
-  Accept both ~/ and ~$USER as the input path when using both the long options.
-  Add more info about the exit/return code of a given command.
-  Add test if date is installed.

============================================================================================================================================

FIXES

-  Newlines ''$'\n''' in directory names in not inserted in the database.
-  Fix the pattern for the dotted directories when searching for path using "realpath" for the commands.
-  Fix the regex for the problematic commands. (exec and source)
-  Fix the wrong directory for some corner cases where it fails.
-  Fix the clean up of tempfiles.
-  Add the missing tty column during the creation of the table history.
-  Fix the errors when doing CTRL-C or ^c.
-  Fix error in epoch time search when the end date is omitted.
-  Fix error 'no such file or directory.' when using a tilde ~ for the path.

============================================================================================================================================

CAVEATS

-  Requires some external GNU tools/utilities that is not builtin from the shell. (Welcome to the shell)
-  Commands from the database are re-executed using the builtin eval command from bash. (no other easy alternative by the shell alone)
-  This is the shell so don't expect something that a compiled binary capability. (The shell is slow...)
-  Sql injection is always a possibility. (Yes, I know, mum says not to use the shell for a database!)

============================================================================================================================================
