Version 2.0.2 Release note of sdb.

======================================================================================================================================

This is a release note from version  2.0.2, if you're migrating  from a previous release
please use the migratedb script to migrate the previous database/table that is missing a
user_host column. As always  as a godd practice before doing some editing ALWAYS create a
BACKUP of the file you're editing regardless of how/what/when/where.

======================================================================================================================================

IMPROVEMENTS:

-  Search commands by date.
-  Pager by default when opening a query.
-  New column which shows the user and host.
-  Optionial multi-user support instruction.
-  Maximum query for the -m option by using a plus sign, -m+
-  Option to edit an existing command before being re-executed.
-  Show the current working directory and the last exit status of the command before being re-executed.

======================================================================================================================================

FIXES:

- Fix bug for the -E option.
  * When printing commands to stdout the trailing pipe with the exit status is printed, with choice 1.
  * Add history -s and print the command to stdout before executing with eval, with choice no 4.

- Remove the function exec.
  * "Bad file descriptor" error when changing file descriptors in the interactive shell.

- Fix the instruction on howto do a multi user set up for sdb.

======================================================================================================================================

CAVEATS:

-  Vim is the default and only pager and editor for querying commands. (for non vim users only)
-  Not all commands are recorded. Like for example 'exec bash'. (not that important anyway)
-  Requires some external GNU tools/utilities that is not builtin from the shell. (Welcome to the shell)
-  Commands from the database are re-executed using the builtin eval command from bash. (no other easy alternative by the shell alone)
-  Sql injection is always a possibility. (Yes, I know, mum says not to use the shell for a database!)
